Index: Screen.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import pygame\r\nimport Consts\r\nimport Trash\r\n\r\nWINDOW = Consts.WINDOW\r\n\r\ndef move_robot(keys_pressed):\r\n    direction = \"\"\r\n    if keys_pressed[pygame.K_LEFT]:  # LEFT\r\n        direction = Consts.LEFT\r\n    if keys_pressed[pygame.K_RIGHT]:  # RIGHT\r\n        direction = Consts.RIGHT\r\n    if keys_pressed[pygame.K_UP]:  # UP\r\n        direction = Consts.UP\r\n    if keys_pressed[pygame.K_DOWN]:  # DOWN\r\n        direction = Consts.DOWN\r\n    return direction\r\n\r\ndef slide_robot():\r\n    while()\r\n\r\n\r\n\r\n\r\ndef update_starter_screen():\r\n    WINDOW.blit(Consts.BACKGROUND_IMG, (0, 0))\r\n    trash_array = Trash.get_trash()\r\n\r\n    for row in trash_array:\r\n\r\n\r\n\r\n    ship_data = pygame.transform.scale(Consts.SHIP_IMAGE, (Consts.SHIP_WIDTH_IMAGE, Consts.SHIP_HEIGHT_IMAGE))\r\n    ship = pygame.Rect(index_to_pixels(Consts.SHIP_LOCATION), (Consts.SHIP_WIDTH_IMAGE, Consts.SHIP_HEIGHT_IMAGE))\r\n    WINDOW.blit(ship_data, (ship.x, ship.y))\r\n\r\n    player_data = pygame.transform.scale(Consts.PLAYER_IMG, (Consts.PLAYER_WIDTH, Consts.PLAYER_HEIGHT))\r\n    player = pygame.Rect(index_to_pixels(player_index), (Consts.PLAYER_WIDTH, Consts.PLAYER_HEIGHT))\r\n    WINDOW.blit(player_data, (player.x, player.y))\r\n\r\n    guard_data = pygame.transform.scale(Consts.GUARD_IMG, (Consts.PLAYER_WIDTH, Consts.PLAYER_HEIGHT))\r\n    guard = pygame.Rect(index_to_pixels(guard_index),(Consts.PLAYER_WIDTH, Consts.PLAYER_HEIGHT))\r\n    WINDOW.blit(guard_data, (guard.x, guard.y))\r\n\r\n    pygame.display.update()
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Screen.py b/Screen.py
--- a/Screen.py	(revision c323f70f987877e52405ac7188ab50ea4daf36dd)
+++ b/Screen.py	(date 1663751057589)
@@ -1,6 +1,7 @@
 import pygame
 import Consts
 import Trash
+import TurtleBot
 
 WINDOW = Consts.WINDOW
 
@@ -17,7 +18,9 @@
     return direction
 
 def slide_robot():
-    while()
+    original_location = TurtleBot.
+    target_location = TurtleBot.
+    while original_location[0] != target_location[0] an
 
 
 
Index: .idea/.gitignore
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/.gitignore b/.idea/.gitignore
new file mode 100644
--- /dev/null	(date 1663751046163)
+++ b/.idea/.gitignore	(date 1663751046163)
@@ -0,0 +1,3 @@
+# Default ignored files
+/shelf/
+/workspace.xml
Index: .idea/TurtleBot.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/TurtleBot.iml b/.idea/TurtleBot.iml
new file mode 100644
--- /dev/null	(date 1663751046176)
+++ b/.idea/TurtleBot.iml	(date 1663751046176)
@@ -0,0 +1,8 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<module type="PYTHON_MODULE" version="4">
+  <component name="NewModuleRootManager">
+    <content url="file://$MODULE_DIR$" />
+    <orderEntry type="inheritedJdk" />
+    <orderEntry type="sourceFolder" forTests="false" />
+  </component>
+</module>
\ No newline at end of file
Index: .idea/modules.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/modules.xml b/.idea/modules.xml
new file mode 100644
--- /dev/null	(date 1663751046188)
+++ b/.idea/modules.xml	(date 1663751046188)
@@ -0,0 +1,8 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="ProjectModuleManager">
+    <modules>
+      <module fileurl="file://$PROJECT_DIR$/.idea/TurtleBot.iml" filepath="$PROJECT_DIR$/.idea/TurtleBot.iml" />
+    </modules>
+  </component>
+</project>
\ No newline at end of file
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
new file mode 100644
--- /dev/null	(date 1663751046198)
+++ b/.idea/misc.xml	(date 1663751046198)
@@ -0,0 +1,4 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="ProjectRootManager" version="2" project-jdk-name="Python 3.11" project-jdk-type="Python SDK" />
+</project>
\ No newline at end of file
Index: .idea/inspectionProfiles/profiles_settings.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/inspectionProfiles/profiles_settings.xml b/.idea/inspectionProfiles/profiles_settings.xml
new file mode 100644
--- /dev/null	(date 1663751046212)
+++ b/.idea/inspectionProfiles/profiles_settings.xml	(date 1663751046212)
@@ -0,0 +1,6 @@
+<component name="InspectionProjectProfileManager">
+  <settings>
+    <option name="USE_PROJECT_PROFILE" value="false" />
+    <version value="1.0" />
+  </settings>
+</component>
\ No newline at end of file
Index: .idea/vcs.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/vcs.xml b/.idea/vcs.xml
new file mode 100644
--- /dev/null	(date 1663751046224)
+++ b/.idea/vcs.xml	(date 1663751046224)
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="VcsDirectoryMappings">
+    <mapping directory="$PROJECT_DIR$" vcs="Git" />
+  </component>
+</project>
\ No newline at end of file
