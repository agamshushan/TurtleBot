Index: Screen.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import pygame\r\nimport Consts\r\nimport Trash\r\nimport TurtleBot\r\n\r\nWINDOW = Consts.WINDOW\r\nrobot_pixel_x, robot_pixel_y = 0, 0\r\n\r\ndef move_robot(keys_pressed):\r\n    direction = \"\"\r\n    global robot_pixel_x\r\n    global robot_pixel_y\r\n    if keys_pressed[pygame.K_LEFT]:  # LEFT\r\n        if TurtleBot.move_bot(Consts.LEFT):\r\n            for i in range(Consts.ROBOT_WIDTH):\r\n                robot_pixel_x -= 1\r\n                update_starter_screen()\r\n    if keys_pressed[pygame.K_RIGHT]:  # RIGHT\r\n        if TurtleBot.move_bot(Consts.RIGHT):\r\n            for i in range(Consts.ROBOT_WIDTH):\r\n                robot_pixel_x += 1\r\n                update_starter_screen()\r\n    if keys_pressed[pygame.K_UP]:  # UP\r\n        if TurtleBot.move_bot(Consts.UP):\r\n            for i in range(Consts.ROBOT_HEIGHT):\r\n                robot_pixel_x -= 1\r\n                update_starter_screen()\r\n    if keys_pressed[pygame.K_DOWN]:  # DOWN\r\n        if TurtleBot.move_bot(Consts.DOWN):\r\n            for i in range(Consts.ROBOT_HEIGHT):\r\n                robot_pixel_x += 1\r\n                update_starter_screen()\r\n\r\n\r\n\r\ndef index_to_pixels(x_index, y_index):\r\n    return (x_index * 50, y_index * 100 + 100)\r\n\r\n\r\n\r\ndef update_starter_screen():\r\n    WINDOW.blit(Consts.BACKGROUND_IMG, (0, 0))\r\n    trash_array = Trash.get_trash()\r\n    global robot_pixel_y\r\n    global robot_pixel_x\r\n\r\n    for i in range(Consts.TURTLE_AMOUNT):\r\n        if i % 2 != 0:\r\n            row = trash_array[-1::-1]\r\n            turtle_data = pygame.transform.rotate(pygame.transform.scale(Consts.TURTLE_IMAGE, (\r\n                Consts.ROBOT_WIDTH, Consts.ROBOT_HEIGHT)), 90)\r\n            turtle = pygame.Rect(index_to_pixels(0, i),\r\n                                 (Consts.ROBOT_WIDTH, Consts.ROBOT_HEIGHT))\r\n            WINDOW.blit(turtle_data, (turtle.x, turtle.y))\r\n        else:\r\n            turtle_data = pygame.transform.rotate(pygame.transform.scale(Consts.TURTLE_IMAGE, (\r\n                Consts.ROBOT_WIDTH, Consts.ROBOT_HEIGHT)), 270)\r\n            turtle = pygame.Rect(index_to_pixels(19, i),\r\n                                 (Consts.ROBOT_WIDTH, Consts.ROBOT_HEIGHT))\r\n            WINDOW.blit(turtle_data, (turtle.x, turtle.y))\r\n        for j in range(len(row)):\r\n            if j != Consts.EMPTY:\r\n                data = pygame.transform.scale(Consts.TRASH_IMAGES[j], (\r\n                Consts.TRASH_WIDTH, Consts.TRASH_HEIGHT))\r\n                trash = pygame.Rect((index_to_pixels(j, i)[0], index_to_pixels(j, i)[1] + 25), (Consts.TRASH_WIDTH, Consts.TRASH_HEIGHT))\r\n                WINDOW.blit(data, (trash.x, trash.y))\r\n\r\n\r\n\r\n    robot_data = pygame.transform.scale(Consts.TURTLE_BOT_IMAGE, (Consts.ROBOT_WIDTH, Consts.ROBOT_HEIGHT))\r\n    robot = pygame.Rect((robot_pixel_x, robot_pixel_y), (Consts.ROBOT_WIDTH, Consts.ROBOT_HEIGHT))\r\n    WINDOW.blit(robot_data, (robot.x, robot.y))\r\n\r\n    pygame.display.update()
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Screen.py b/Screen.py
--- a/Screen.py	(revision d5e098ee400e01b40bb70fe4cc07094ff3c4ff8e)
+++ b/Screen.py	(date 1663758433816)
@@ -71,4 +71,35 @@
     robot = pygame.Rect((robot_pixel_x, robot_pixel_y), (Consts.ROBOT_WIDTH, Consts.ROBOT_HEIGHT))
     WINDOW.blit(robot_data, (robot.x, robot.y))
 
+    pygame.display.update()
+
+
+def draw_lose_message():
+    draw_message(Consts.LOSE_MESSAGE, Consts.LOSE_FONT_SIZE,
+                 Consts.LOSE_COLOR, Consts.LOSE_LOCATION)
+
+
+def draw_win_message():
+    draw_message(Consts.WIN_MESSAGE, Consts.WIN_FONT_SIZE,
+                 Consts.WIN_COLOR, Consts.WIN_LOCATION)
+
+
+def draw_message(message, font_size, color, location, backgound_img):
+    pygame.font.init()
+
+    WINDOW.blit(Consts.BACKGROUND_IMG, (0, 0))
+
+    if message == "You Lost!":
+        img_data = pygame.transform.scale(Consts.LOSE_IMAGE, (315, 270))
+        img = pygame.Rect((50, 100), (315, 270))
+        WINDOW.blit(img_data, (img.x, img.y))
+    elif message == "You Won!":
+        img_data = pygame.transform.scale(Consts.WIN_IMAGE, (Consts.WINDOW_WIDTH, Consts.WINDOW_HEIGHT))
+        img = pygame.Rect((0, 0), (Consts.WINDOW_WIDTH, Consts.WINDOW_HEIGHT))
+        WINDOW.blit(img_data, (0, 0))
+
+    font = pygame.font.SysFont(Consts.FONT_NAME, font_size)
+    text_img = font.render(message, True, color)
+    WINDOW.blit(text_img, location)
+
     pygame.display.update()
\ No newline at end of file
